---
- name: Install xorg
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - xorg-server
    - xorg-xinit
    - xorg-xrandr
  become: true

- name: Install i3 metapackages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
      - i3-gaps
      - i3lock
  become: true

- name: Install additional packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
      - dunst
      - volumeicon
      - xorg-xsetroot
      - picom
      - xsel
      - rofi
      - rofi-calc
      - scrot
      - viewnior
      - xsettingsd
      - hsetroot
      - lxappearance
      - feh
      - terminus-font
      - thunar
      - w3m
      - pulseaudio
      - pavucontrol
  become: true

- name: Additional packages from aur
  when: ansible_fact["os_family"] == "Archlinux"
  kewlfft.aur.aur:
    name: "{{ item }}"
  become: true
  become_user: "{{ username }}"
  with_items:
    - themix-full-git
    - polybar
    - tamzen-font
    - nerd-fonts-anonymous-pro

- name: Clone ranger_devicons plugin repo
  git:
    repo: https://github.com/alexanderjeurissen/ranger_devicons
    dest: /home/{{ username }}/.config/ranger/plugins/ranger_devicons
  become: true
  become_user: "{{ username }}"

- name: Copy dotfiles
  ansible.builtin.copy:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'
  with_items:
      - { s: "files/.config/i3/config", d: "/home/{{username}}/.config/i3/" }
      - { s: "files/.config/dunst/dunstrc" , d: "/home/{{username}}/.config/dunst/" }
      - { s: "files/.config/picom.conf" , d: "/home/{{username}}/.config/" }
      - { s: "files/.Xresources" , d: "/home/{{username}}/" }
      - { s: "files/.xsettingsd" , d: "/home/{{username}}/" }
      - { s: "files/.config/oomox/colors/srcery", d: "/home/{{username}}/.config/oomox/colors/" }
      - { s: "files/.config/procps/toprc", d: "/home/{{username}}/.config/procps/" }
      - { s: "files/.config/kitty/kitty.conf", d: "/home/{{username}}/.config/kitty/" }
      - { s: "files/.config/kitty/srcery_kitty.conf", d: "/home/{{username}}/.config/kitty/" }
      - { s: "files/.config/alacritty", d: "/home/{{username}}/.config/" }
      - { s: "files/.config/rofi/srcery_rofi.rasi", d: "/home/{{username}}/.config/rofi/" }
      - { s: "files/.config/rofi/config.rasi", d: "/home/{{username}}/.config/rofi/" }
      - { s: "files/.config/polybar", d: "/home/{{username}}/.config/" }
      - { s: "files/.wallpapers", d: "/home/{{username}}/" }
      - { s: "files/.themes", d: "/home/{{username}}" }
      - { s: "files/.config/gtk-3.0", d: "/home/{{username}}/.config" }
      - { s: "files/.gtkrc-2.0", d: "/home/{{username}}/" }
      - { s: "files/.config/ranger", d: "/home/{{username}}/.config" }
  become: true

- name: Copy root dotfiles
  ansible.builtin.copy:
    src: "{{ item.s }}"
    dest: "{{ item.d }}"
    owner: "root"
    group: "root"
    mode: '0644'
  with_items:
    - { s: "files/xinitrc", d: "/etc/X11/xinit/" }
  become: true

- name: Chmod +x for scripts
  file: dest="{{item}}" mode="ug+x"
  with_items:
    - "/home/{{username}}/.config/polybar/launch.sh"
  become: true

# - name: Install Ly Display Manager
#   kewlfft.aur.aur:
#     name: ly
#   become: true
#   become_user: "{{ username }}"

# - ansible.builtin.systemd:
#     name: ly.service
#     state: started
#     enabled: yes
#   become: true

#- name: Install gui tools

- name: Install basic gui utils
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - arandr
    - kitty
    - alacritty
    - chromium
    - code
    - keepass
    - firefox
    - gedit
    - calibre
  become: true

- name: Gui utils from aur
  when: ansible_fact["os_family"] == "Archlinux"
  kewlfft.aur.aur:
    name: "{{ item }}"
  become: true
  become_user: "{{ username }}"
  with_items:
    - obsidian